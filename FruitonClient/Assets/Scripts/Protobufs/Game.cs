// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cz.Cuni.Mff.Fruiton.Dto {

  /// <summary>Holder for reflection information generated from game.proto</summary>
  public static partial class GameReflection {

    #region Descriptor
    /// <summary>File descriptor for game.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpnYW1lLnByb3RvEhdjei5jdW5pLm1mZi5mcnVpdG9uLmR0bxoKY2hhdC5w",
            "cm90byKBAQoOV3JhcHBlck1lc3NhZ2USMwoHY2hhdE1zZxgBIAEoCzIgLmN6",
            "LmN1bmkubWZmLmZydWl0b24uZHRvLkNoYXRNc2dIABIzCgVzYWxhZBgCIAEo",
            "CzIiLmN6LmN1bmkubWZmLmZydWl0b24uZHRvLlNhbGFkSW5mb0gAQgUKA21z",
            "ZyIVCgdGcnVpdG9uEgoKAmlkGAEgASgJIjwKCVNhbGFkSW5mbxIvCgVzYWxh",
            "ZBgBIAMoCzIgLmN6LmN1bmkubWZmLmZydWl0b24uZHRvLkZydWl0b24iKQoF",
            "U2FsYWQSDAoEbmFtZRgBIAEoCRISCgpmcnVpdG9uSURzGAIgAygFQiUKF2N6",
            "LmN1bmkubWZmLmZydWl0b24uZHRvQgpHYW1lUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cz.Cuni.Mff.Fruiton.Dto.ChatReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cz.Cuni.Mff.Fruiton.Dto.WrapperMessage), global::Cz.Cuni.Mff.Fruiton.Dto.WrapperMessage.Parser, new[]{ "ChatMsg", "Salad" }, new[]{ "Msg" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton), global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cz.Cuni.Mff.Fruiton.Dto.SaladInfo), global::Cz.Cuni.Mff.Fruiton.Dto.SaladInfo.Parser, new[]{ "Salad" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Cz.Cuni.Mff.Fruiton.Dto.Salad), global::Cz.Cuni.Mff.Fruiton.Dto.Salad.Parser, new[]{ "Name", "FruitonIDs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WrapperMessage : pb::IMessage<WrapperMessage> {
    private static readonly pb::MessageParser<WrapperMessage> _parser = new pb::MessageParser<WrapperMessage>(() => new WrapperMessage());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WrapperMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cz.Cuni.Mff.Fruiton.Dto.GameReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WrapperMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WrapperMessage(WrapperMessage other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.ChatMsg:
          ChatMsg = other.ChatMsg.Clone();
          break;
        case MsgOneofCase.Salad:
          Salad = other.Salad.Clone();
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WrapperMessage Clone() {
      return new WrapperMessage(this);
    }

    /// <summary>Field number for the "chatMsg" field.</summary>
    public const int ChatMsgFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cz.Cuni.Mff.Fruiton.Dto.ChatMsg ChatMsg {
      get { return msgCase_ == MsgOneofCase.ChatMsg ? (global::Cz.Cuni.Mff.Fruiton.Dto.ChatMsg) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.ChatMsg;
      }
    }

    /// <summary>Field number for the "salad" field.</summary>
    public const int SaladFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Cz.Cuni.Mff.Fruiton.Dto.SaladInfo Salad {
      get { return msgCase_ == MsgOneofCase.Salad ? (global::Cz.Cuni.Mff.Fruiton.Dto.SaladInfo) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Salad;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      ChatMsg = 1,
      Salad = 2,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WrapperMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WrapperMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ChatMsg, other.ChatMsg)) return false;
      if (!object.Equals(Salad, other.Salad)) return false;
      if (MsgCase != other.MsgCase) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.ChatMsg) hash ^= ChatMsg.GetHashCode();
      if (msgCase_ == MsgOneofCase.Salad) hash ^= Salad.GetHashCode();
      hash ^= (int) msgCase_;
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.ChatMsg) {
        output.WriteRawTag(10);
        output.WriteMessage(ChatMsg);
      }
      if (msgCase_ == MsgOneofCase.Salad) {
        output.WriteRawTag(18);
        output.WriteMessage(Salad);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.ChatMsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChatMsg);
      }
      if (msgCase_ == MsgOneofCase.Salad) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Salad);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WrapperMessage other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.ChatMsg:
          ChatMsg = other.ChatMsg;
          break;
        case MsgOneofCase.Salad:
          Salad = other.Salad;
          break;
      }

    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            global::Cz.Cuni.Mff.Fruiton.Dto.ChatMsg subBuilder = new global::Cz.Cuni.Mff.Fruiton.Dto.ChatMsg();
            if (msgCase_ == MsgOneofCase.ChatMsg) {
              subBuilder.MergeFrom(ChatMsg);
            }
            input.ReadMessage(subBuilder);
            ChatMsg = subBuilder;
            break;
          }
          case 18: {
            global::Cz.Cuni.Mff.Fruiton.Dto.SaladInfo subBuilder = new global::Cz.Cuni.Mff.Fruiton.Dto.SaladInfo();
            if (msgCase_ == MsgOneofCase.Salad) {
              subBuilder.MergeFrom(Salad);
            }
            input.ReadMessage(subBuilder);
            Salad = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class Fruiton : pb::IMessage<Fruiton> {
    private static readonly pb::MessageParser<Fruiton> _parser = new pb::MessageParser<Fruiton>(() => new Fruiton());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fruiton> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cz.Cuni.Mff.Fruiton.Dto.GameReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fruiton() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fruiton(Fruiton other) : this() {
      id_ = other.id_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fruiton Clone() {
      return new Fruiton(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fruiton);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fruiton other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fruiton other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaladInfo : pb::IMessage<SaladInfo> {
    private static readonly pb::MessageParser<SaladInfo> _parser = new pb::MessageParser<SaladInfo>(() => new SaladInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaladInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cz.Cuni.Mff.Fruiton.Dto.GameReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaladInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaladInfo(SaladInfo other) : this() {
      salad_ = other.salad_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaladInfo Clone() {
      return new SaladInfo(this);
    }

    /// <summary>Field number for the "salad" field.</summary>
    public const int SaladFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton> _repeated_salad_codec
        = pb::FieldCodec.ForMessage(10, global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton.Parser);
    private readonly pbc::RepeatedField<global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton> salad_ = new pbc::RepeatedField<global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cz.Cuni.Mff.Fruiton.Dto.Fruiton> Salad {
      get { return salad_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaladInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaladInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!salad_.Equals(other.salad_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= salad_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      salad_.WriteTo(output, _repeated_salad_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += salad_.CalculateSize(_repeated_salad_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaladInfo other) {
      if (other == null) {
        return;
      }
      salad_.Add(other.salad_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            salad_.AddEntriesFrom(input, _repeated_salad_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Salad : pb::IMessage<Salad> {
    private static readonly pb::MessageParser<Salad> _parser = new pb::MessageParser<Salad>(() => new Salad());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Salad> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cz.Cuni.Mff.Fruiton.Dto.GameReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Salad() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Salad(Salad other) : this() {
      name_ = other.name_;
      fruitonIDs_ = other.fruitonIDs_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Salad Clone() {
      return new Salad(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fruitonIDs" field.</summary>
    public const int FruitonIDsFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_fruitonIDs_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> fruitonIDs_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> FruitonIDs {
      get { return fruitonIDs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Salad);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Salad other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!fruitonIDs_.Equals(other.fruitonIDs_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= fruitonIDs_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      fruitonIDs_.WriteTo(output, _repeated_fruitonIDs_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += fruitonIDs_.CalculateSize(_repeated_fruitonIDs_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Salad other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      fruitonIDs_.Add(other.fruitonIDs_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            fruitonIDs_.AddEntriesFrom(input, _repeated_fruitonIDs_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
