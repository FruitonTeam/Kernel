// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from user.proto</summary>
public static partial class UserReflection {

  #region Descriptor
  /// <summary>File descriptor for user.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static UserReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "Cgp1c2VyLnByb3RvIkIKEFJlZ2lzdHJhdGlvbkRhdGESDQoFbG9naW4YASAB",
          "KAkSEAoIcGFzc3dvcmQYAiABKAkSDQoFZW1haWwYAyABKAkiLAoJTG9naW5E",
          "YXRhEg0KBWxvZ2luGAEgASgJEhAKCHBhc3N3b3JkGAIgASgJIhwKC0xvZ2lu",
          "R29vZ2xlEg0KBXRva2VuGAEgASgJQiUKF2N6LmN1bmkubWZmLmZydWl0b24u",
          "ZHRvQgpVc2VyUHJvdG9zYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::RegistrationData), global::RegistrationData.Parser, new[]{ "Login", "Password", "Email" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginData), global::LoginData.Parser, new[]{ "Login", "Password" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LoginGoogle), global::LoginGoogle.Parser, new[]{ "Token" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class RegistrationData : pb::IMessage<RegistrationData> {
  private static readonly pb::MessageParser<RegistrationData> _parser = new pb::MessageParser<RegistrationData>(() => new RegistrationData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RegistrationData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UserReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegistrationData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegistrationData(RegistrationData other) : this() {
    login_ = other.login_;
    password_ = other.password_;
    email_ = other.email_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RegistrationData Clone() {
    return new RegistrationData(this);
  }

  /// <summary>Field number for the "login" field.</summary>
  public const int LoginFieldNumber = 1;
  private string login_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Login {
    get { return login_; }
    set {
      login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "email" field.</summary>
  public const int EmailFieldNumber = 3;
  private string email_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Email {
    get { return email_; }
    set {
      email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RegistrationData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RegistrationData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Login != other.Login) return false;
    if (Password != other.Password) return false;
    if (Email != other.Email) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Login.Length != 0) hash ^= Login.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    if (Email.Length != 0) hash ^= Email.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Login.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Login);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
    if (Email.Length != 0) {
      output.WriteRawTag(26);
      output.WriteString(Email);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Login.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    if (Email.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RegistrationData other) {
    if (other == null) {
      return;
    }
    if (other.Login.Length != 0) {
      Login = other.Login;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
    if (other.Email.Length != 0) {
      Email = other.Email;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Login = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
        case 26: {
          Email = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class LoginData : pb::IMessage<LoginData> {
  private static readonly pb::MessageParser<LoginData> _parser = new pb::MessageParser<LoginData>(() => new LoginData());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginData> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UserReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginData() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginData(LoginData other) : this() {
    login_ = other.login_;
    password_ = other.password_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginData Clone() {
    return new LoginData(this);
  }

  /// <summary>Field number for the "login" field.</summary>
  public const int LoginFieldNumber = 1;
  private string login_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Login {
    get { return login_; }
    set {
      login_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "password" field.</summary>
  public const int PasswordFieldNumber = 2;
  private string password_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Password {
    get { return password_; }
    set {
      password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginData);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginData other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Login != other.Login) return false;
    if (Password != other.Password) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Login.Length != 0) hash ^= Login.GetHashCode();
    if (Password.Length != 0) hash ^= Password.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Login.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Login);
    }
    if (Password.Length != 0) {
      output.WriteRawTag(18);
      output.WriteString(Password);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Login.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Login);
    }
    if (Password.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginData other) {
    if (other == null) {
      return;
    }
    if (other.Login.Length != 0) {
      Login = other.Login;
    }
    if (other.Password.Length != 0) {
      Password = other.Password;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Login = input.ReadString();
          break;
        }
        case 18: {
          Password = input.ReadString();
          break;
        }
      }
    }
  }

}

public sealed partial class LoginGoogle : pb::IMessage<LoginGoogle> {
  private static readonly pb::MessageParser<LoginGoogle> _parser = new pb::MessageParser<LoginGoogle>(() => new LoginGoogle());
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LoginGoogle> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::UserReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginGoogle() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginGoogle(LoginGoogle other) : this() {
    token_ = other.token_;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LoginGoogle Clone() {
    return new LoginGoogle(this);
  }

  /// <summary>Field number for the "token" field.</summary>
  public const int TokenFieldNumber = 1;
  private string token_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Token {
    get { return token_; }
    set {
      token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LoginGoogle);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LoginGoogle other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Token != other.Token) return false;
    return true;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Token.Length != 0) hash ^= Token.GetHashCode();
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Token.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Token);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Token.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LoginGoogle other) {
    if (other == null) {
      return;
    }
    if (other.Token.Length != 0) {
      Token = other.Token;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          input.SkipLastField();
          break;
        case 10: {
          Token = input.ReadString();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
